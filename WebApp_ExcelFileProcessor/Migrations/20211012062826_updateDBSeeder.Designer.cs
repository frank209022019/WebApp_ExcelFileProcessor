// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp_ExcelFileProcessor.Data;

namespace WebApp_ExcelFileProcessor.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211012062826_updateDBSeeder")]
    partial class updateDBSeeder
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "ba566e0f-3d52-4967-a62c-1965b9f1e251",
                            ConcurrencyStamp = "16a8161e-b740-4404-9d95-33c1fbcedcfd",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "1b824f5d-01b1-411b-8e44-5b05003ef81e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "d0d66b8d-2914-4227-97c9-57a52f73f848",
                            Email = "admin@fileprocessor.co.za",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@FILEPROCESSOR.CO.ZA",
                            NormalizedUserName = "MYUSER",
                            PasswordHash = "AQAAAAEAACcQAAAAEKKkbW/8gHlwRseieK7Es+IUB58SMKt06jQhmpVmSntvXWw29FrYmgySB+kU2v5frg==",
                            PhoneNumber = "0413743172",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "e86963dd-72d6-428b-9fba-cea54019577f",
                            TwoFactorEnabled = false,
                            UserName = "myuser"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "1b824f5d-01b1-411b-8e44-5b05003ef81e",
                            RoleId = "ba566e0f-3d52-4967-a62c-1965b9f1e251"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.Audit", b =>
                {
                    b.Property<Guid>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AffectedColumns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NewValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AuditId");

                    b.HasIndex("UserId");

                    b.ToTable("Audits");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.Gender", b =>
                {
                    b.Property<Guid>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("GenderChar")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("GenderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("GenderId");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            GenderId = new Guid("f0915908-a17e-40d6-8b7f-351fc3177799"),
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 234, DateTimeKind.Local).AddTicks(7315),
                            GenderChar = "F",
                            GenderName = "Female",
                            IsDeleted = false
                        },
                        new
                        {
                            GenderId = new Guid("bd83c4f3-14a8-498a-be1d-602272a4600a"),
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 235, DateTimeKind.Local).AddTicks(6493),
                            GenderChar = "M",
                            GenderName = "Male",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.GradeModuleRoster", b =>
                {
                    b.Property<Guid>("GradeModuleRosterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<int>("GradeInt")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ModuleCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GradeModuleRosterId");

                    b.HasIndex("ModuleCodeId");

                    b.ToTable("GradeModuleRoster");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.ModuleCode", b =>
                {
                    b.Property<Guid>("ModuleCodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModuleCodeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ModuleCodeId");

                    b.ToTable("ModuleCodes");

                    b.HasData(
                        new
                        {
                            ModuleCodeId = new Guid("c22ca626-e736-402e-87fb-95c1f9fb22b6"),
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 254, DateTimeKind.Local).AddTicks(3701),
                            IsDeleted = false,
                            ModuleCodeName = "BASE"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("f18f71d6-e378-406f-9c6a-92669abe6b86"),
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 254, DateTimeKind.Local).AddTicks(4423),
                            IsDeleted = false,
                            ModuleCodeName = "MML"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("b095ce04-a306-4ea5-99da-26f36c6f1471"),
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 254, DateTimeKind.Local).AddTicks(4437),
                            IsDeleted = false,
                            ModuleCodeName = "LHC"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("026c9273-a2fa-4021-894c-a5568b47e076"),
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 254, DateTimeKind.Local).AddTicks(4441),
                            IsDeleted = false,
                            ModuleCodeName = "AGCLM"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("f284bc20-e08f-474c-aa12-32d529066c16"),
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 254, DateTimeKind.Local).AddTicks(4444),
                            IsDeleted = false,
                            ModuleCodeName = "ABCP"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("3d886a5e-9788-47ae-b06b-3ec2b99a8e94"),
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 254, DateTimeKind.Local).AddTicks(4452),
                            IsDeleted = false,
                            ModuleCodeName = "ENG"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("e8c0f661-2d84-49fb-8bd6-a2c3b6f64dec"),
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 254, DateTimeKind.Local).AddTicks(4456),
                            IsDeleted = false,
                            ModuleCodeName = "AFR/XHO"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("8e6511b1-cae4-4f0f-ae7c-1377134f8f04"),
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 254, DateTimeKind.Local).AddTicks(4459),
                            IsDeleted = false,
                            ModuleCodeName = "LO"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("c4d5e1ea-00cc-4a8f-b5b2-713c954f16b5"),
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 254, DateTimeKind.Local).AddTicks(4472),
                            IsDeleted = false,
                            ModuleCodeName = "EXAM"
                        });
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.Student", b =>
                {
                    b.Property<Guid>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QRCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StudentClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudentColorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudentGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StudentNr")
                        .HasColumnType("int");

                    b.HasKey("StudentId");

                    b.HasIndex("GenderId");

                    b.HasIndex("StudentClassId");

                    b.HasIndex("StudentColorId");

                    b.HasIndex("StudentGroupId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentClass", b =>
                {
                    b.Property<Guid>("StudentClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClassChar")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GradeInt")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("StudentClassId");

                    b.ToTable("StudentClasses");

                    b.HasData(
                        new
                        {
                            StudentClassId = new Guid("b958a3af-ea5d-4b55-9164-16a647ea318c"),
                            ClassChar = "A",
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 236, DateTimeKind.Local).AddTicks(7832),
                            DisplayName = "8A",
                            GradeInt = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("f4aefa77-a678-44eb-a1d2-67b38bfdc937"),
                            ClassChar = "B",
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 236, DateTimeKind.Local).AddTicks(7846),
                            DisplayName = "8B",
                            GradeInt = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("136908e8-c683-4603-a795-c3b4951e9eb6"),
                            ClassChar = "C",
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 236, DateTimeKind.Local).AddTicks(7848),
                            DisplayName = "8C",
                            GradeInt = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("fc36beea-d6ba-4d74-869d-e518020dec9c"),
                            ClassChar = "D",
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 236, DateTimeKind.Local).AddTicks(7862),
                            DisplayName = "8D",
                            GradeInt = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("3fab5ccd-fca6-4bec-a269-94039e6aa718"),
                            ClassChar = "E",
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 236, DateTimeKind.Local).AddTicks(7864),
                            DisplayName = "8E",
                            GradeInt = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("ca0ba067-6961-44cb-a410-a9bfa1c8e8a1"),
                            ClassChar = "F",
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 236, DateTimeKind.Local).AddTicks(7866),
                            DisplayName = "8F",
                            GradeInt = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("e84a3dbb-6f1f-44a0-a3ac-ab045be2a102"),
                            ClassChar = "G",
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 236, DateTimeKind.Local).AddTicks(7868),
                            DisplayName = "8G",
                            GradeInt = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("e398c317-ef6b-421b-82ed-bbc184202480"),
                            ClassChar = "A",
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 236, DateTimeKind.Local).AddTicks(7869),
                            DisplayName = "9A",
                            GradeInt = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("383f9032-44d1-4f70-a731-931e62d93a16"),
                            ClassChar = "B",
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 236, DateTimeKind.Local).AddTicks(7872),
                            DisplayName = "9B",
                            GradeInt = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("285d8f3b-941c-4975-9d7a-9b70168e507f"),
                            ClassChar = "C",
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 236, DateTimeKind.Local).AddTicks(7874),
                            DisplayName = "9C",
                            GradeInt = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("03b51685-8a68-4274-b4f6-60eb85a8c4fd"),
                            ClassChar = "D",
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 236, DateTimeKind.Local).AddTicks(7876),
                            DisplayName = "9D",
                            GradeInt = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("9fa6ea09-3628-4d4c-9cb7-f56404cb66a7"),
                            ClassChar = "E",
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 236, DateTimeKind.Local).AddTicks(7880),
                            DisplayName = "9E",
                            GradeInt = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("764ec412-2071-4b89-b6fc-419ffb71e257"),
                            ClassChar = "F",
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 236, DateTimeKind.Local).AddTicks(7881),
                            DisplayName = "9F",
                            GradeInt = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("6530dd86-dcfe-4908-964a-30bc319fcfbe"),
                            ClassChar = "G",
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 236, DateTimeKind.Local).AddTicks(7883),
                            DisplayName = "9G",
                            GradeInt = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("fbd112ed-8b53-468c-8c80-b0d4c13cd972"),
                            ClassChar = "A",
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 236, DateTimeKind.Local).AddTicks(7885),
                            DisplayName = "10A",
                            GradeInt = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("ab16897b-536b-477c-aea5-55e8267df185"),
                            ClassChar = "B",
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 236, DateTimeKind.Local).AddTicks(7887),
                            DisplayName = "10B",
                            GradeInt = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("8abb482d-36cf-4abc-a7fd-f479a1223ebb"),
                            ClassChar = "C",
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 236, DateTimeKind.Local).AddTicks(7889),
                            DisplayName = "10C",
                            GradeInt = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("e68362fd-a8aa-4bbf-a1ee-60e0a37ee1ca"),
                            ClassChar = "D",
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 236, DateTimeKind.Local).AddTicks(7891),
                            DisplayName = "10D",
                            GradeInt = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("c47f86b7-af34-4b08-894c-318d75af1619"),
                            ClassChar = "E",
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 236, DateTimeKind.Local).AddTicks(7893),
                            DisplayName = "10E",
                            GradeInt = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("b6e0ea18-3c2b-4e59-9de5-4cde5ffadee2"),
                            ClassChar = "F",
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 236, DateTimeKind.Local).AddTicks(7896),
                            DisplayName = "10F",
                            GradeInt = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("f5759bb4-4598-410c-9739-b2fb876c7f4b"),
                            ClassChar = "G",
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 236, DateTimeKind.Local).AddTicks(7898),
                            DisplayName = "10G",
                            GradeInt = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("87c373c3-db6a-484e-be2e-8c81aa7e8f83"),
                            ClassChar = "A",
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 236, DateTimeKind.Local).AddTicks(7900),
                            DisplayName = "11A",
                            GradeInt = 11,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("35f1eab9-17ba-4735-8ab1-5842c889429d"),
                            ClassChar = "B",
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 236, DateTimeKind.Local).AddTicks(7902),
                            DisplayName = "11B",
                            GradeInt = 11,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("6b0d2ed1-ffe1-4fd9-bf20-a9cda042a8ee"),
                            ClassChar = "C",
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 236, DateTimeKind.Local).AddTicks(7960),
                            DisplayName = "11C",
                            GradeInt = 11,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("32280814-a229-406e-aa03-06ce0d262294"),
                            ClassChar = "D",
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 236, DateTimeKind.Local).AddTicks(7962),
                            DisplayName = "11D",
                            GradeInt = 11,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("dcba5fa1-a554-4320-9c19-3514d2abc714"),
                            ClassChar = "E",
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 236, DateTimeKind.Local).AddTicks(7965),
                            DisplayName = "11E",
                            GradeInt = 11,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("56cad88b-a40a-47f2-891e-f4c7a46f86c9"),
                            ClassChar = "F",
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 236, DateTimeKind.Local).AddTicks(7967),
                            DisplayName = "11F",
                            GradeInt = 11,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("d466b8ed-2e40-4230-9194-4a584ea72141"),
                            ClassChar = "G",
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 236, DateTimeKind.Local).AddTicks(7971),
                            DisplayName = "11G",
                            GradeInt = 11,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("cef8fba2-a4d3-4bbe-8034-7103072146e0"),
                            ClassChar = "A",
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 236, DateTimeKind.Local).AddTicks(7972),
                            DisplayName = "12A",
                            GradeInt = 12,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("ac6a9844-aa49-497d-959a-76a4c2ae7aeb"),
                            ClassChar = "B",
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 236, DateTimeKind.Local).AddTicks(7974),
                            DisplayName = "12B",
                            GradeInt = 12,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("2e2b62d6-0dfc-4fcf-b535-b731661b86e6"),
                            ClassChar = "C",
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 236, DateTimeKind.Local).AddTicks(7976),
                            DisplayName = "12C",
                            GradeInt = 12,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("474b1956-310c-415e-b613-b6837b157d3b"),
                            ClassChar = "D",
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 236, DateTimeKind.Local).AddTicks(7978),
                            DisplayName = "12D",
                            GradeInt = 12,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("b2b5f519-65ef-404d-8919-f1c757e5a3c5"),
                            ClassChar = "E",
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 236, DateTimeKind.Local).AddTicks(7980),
                            DisplayName = "12E",
                            GradeInt = 12,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("46f403f5-ffcc-4b21-b12e-04a9192e23f4"),
                            ClassChar = "F",
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 236, DateTimeKind.Local).AddTicks(7981),
                            DisplayName = "12F",
                            GradeInt = 12,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("8a81f5e8-0369-4226-958a-ee28a9f5b1bb"),
                            ClassChar = "G",
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 236, DateTimeKind.Local).AddTicks(7983),
                            DisplayName = "12G",
                            GradeInt = 12,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentColor", b =>
                {
                    b.Property<Guid>("StudentColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("StudentColorId");

                    b.ToTable("StudentColors");

                    b.HasData(
                        new
                        {
                            StudentColorId = new Guid("a399fd5f-fd54-4918-9a45-ce0cf1dcac2a"),
                            ColorName = "Gold",
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 236, DateTimeKind.Local).AddTicks(6332),
                            IsDeleted = false
                        },
                        new
                        {
                            StudentColorId = new Guid("9d7c8808-01ab-4a63-81e2-328db14ae1ed"),
                            ColorName = "Scarlet",
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 236, DateTimeKind.Local).AddTicks(6349),
                            IsDeleted = false
                        },
                        new
                        {
                            StudentColorId = new Guid("a1586607-098e-4abc-82a9-d880bf57d234"),
                            ColorName = "Unassigned",
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 236, DateTimeKind.Local).AddTicks(6351),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentGroup", b =>
                {
                    b.Property<Guid>("StudentGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupChar")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("GroupInt")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("StudentGroupId");

                    b.ToTable("StudentGroups");

                    b.HasData(
                        new
                        {
                            StudentGroupId = new Guid("d2548b8b-7333-484b-ac46-080619c05b50"),
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 237, DateTimeKind.Local).AddTicks(1080),
                            DisplayName = "G1",
                            GroupChar = "G",
                            GroupInt = 1,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentGroupId = new Guid("7604381d-4e13-4eaa-8197-6dcc2346e48a"),
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 237, DateTimeKind.Local).AddTicks(1105),
                            DisplayName = "G2",
                            GroupChar = "G",
                            GroupInt = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentGroupId = new Guid("cb3da466-e761-4c49-96c5-6c456596f2ff"),
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 237, DateTimeKind.Local).AddTicks(1108),
                            DisplayName = "G3",
                            GroupChar = "G",
                            GroupInt = 3,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentGroupId = new Guid("fdc7b5c5-d451-48d2-afb4-efa8a52c1ec6"),
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 237, DateTimeKind.Local).AddTicks(1113),
                            DisplayName = "G4",
                            GroupChar = "G",
                            GroupInt = 4,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentGroupId = new Guid("9de534f4-733f-4719-87b7-0c353b0d6a69"),
                            DateCreated = new DateTime(2021, 10, 12, 8, 28, 25, 237, DateTimeKind.Local).AddTicks(1116),
                            DisplayName = "G5",
                            GroupChar = "G",
                            GroupInt = 5,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentScreening", b =>
                {
                    b.Property<Guid>("StudentScreeningId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdmittedSeverPneumonia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnyOfTheFollowingSymptoms")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttendHealthFacility14Days")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CloseContactInfectedPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CloseContactProbableInfectedPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("GeneralSenseWellbeing")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HighRiskTravel14Days")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("QRCodeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ScreeningTimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SufferFromChronicDisease")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WearingAMask")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentScreeningId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentScreening");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentScreeningTemp", b =>
                {
                    b.Property<Guid>("StudentScreeningTempId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdmittedSeverPneumonia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnyOfTheFollowingSymptoms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttendHealthFacility14Days")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CloseContactInfectedPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CloseContactProbableInfectedPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("GeneralSenseWellbeing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HighRiskTravel14Days")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("QRCodeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RowNumber")
                        .HasColumnType("int");

                    b.Property<string>("RowType")
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime?>("ScreeningTimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SufferFromChronicDisease")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WearingAMask")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentScreeningTempId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentScreeningTemps");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentTemp", b =>
                {
                    b.Property<Guid>("StudentTempId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QRCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RowNumber")
                        .HasColumnType("int");

                    b.Property<string>("RowType")
                        .HasColumnType("nvarchar(1)");

                    b.Property<Guid?>("StudentClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StudentColorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StudentGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("StudentNr")
                        .HasColumnType("int");

                    b.HasKey("StudentTempId");

                    b.HasIndex("GenderId");

                    b.HasIndex("StudentClassId");

                    b.HasIndex("StudentColorId");

                    b.HasIndex("StudentGroupId");

                    b.ToTable("StudentTemps");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.Audit", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("IdentityUser");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.GradeModuleRoster", b =>
                {
                    b.HasOne("WebApp_ExcelFileProcessor.Models.ModuleCode", "ModuleCode")
                        .WithMany()
                        .HasForeignKey("ModuleCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModuleCode");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.Student", b =>
                {
                    b.HasOne("WebApp_ExcelFileProcessor.Models.Gender", "Gender")
                        .WithMany("Students")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApp_ExcelFileProcessor.Models.StudentClass", "StudentClass")
                        .WithMany("Students")
                        .HasForeignKey("StudentClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApp_ExcelFileProcessor.Models.StudentColor", "StudentColor")
                        .WithMany("Students")
                        .HasForeignKey("StudentColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApp_ExcelFileProcessor.Models.StudentGroup", "StudentGroup")
                        .WithMany("Students")
                        .HasForeignKey("StudentGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gender");

                    b.Navigation("StudentClass");

                    b.Navigation("StudentColor");

                    b.Navigation("StudentGroup");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentScreening", b =>
                {
                    b.HasOne("WebApp_ExcelFileProcessor.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentScreeningTemp", b =>
                {
                    b.HasOne("WebApp_ExcelFileProcessor.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentTemp", b =>
                {
                    b.HasOne("WebApp_ExcelFileProcessor.Models.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.StudentClass", "StudentClass")
                        .WithMany()
                        .HasForeignKey("StudentClassId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.StudentColor", "StudentColor")
                        .WithMany()
                        .HasForeignKey("StudentColorId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.StudentGroup", "StudentGroup")
                        .WithMany()
                        .HasForeignKey("StudentGroupId");

                    b.Navigation("Gender");

                    b.Navigation("StudentClass");

                    b.Navigation("StudentColor");

                    b.Navigation("StudentGroup");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.Gender", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentClass", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentColor", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentGroup", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
