// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp_ExcelFileProcessor.Data;

namespace WebApp_ExcelFileProcessor.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211012124017_updateStudentWithExtra")]
    partial class updateStudentWithExtra
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "ba566e0f-3d52-4967-a62c-1965b9f1e251",
                            ConcurrencyStamp = "3e92b254-12f4-44dc-ae07-5bcfea697427",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "1b824f5d-01b1-411b-8e44-5b05003ef81e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "40a955fa-06f5-46ff-8129-cf360f6006f2",
                            Email = "admin@fileprocessor.co.za",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@FILEPROCESSOR.CO.ZA",
                            NormalizedUserName = "MYUSER",
                            PasswordHash = "AQAAAAEAACcQAAAAEM2FBDnHziQtpGx3WpifIimaR+NXgA8FcAjzp2mLDPiBFdyIc9Y34xxmJonz7sPfdA==",
                            PhoneNumber = "0413743172",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "a1edeaab-ca9a-451a-956e-f63dab69b3d9",
                            TwoFactorEnabled = false,
                            UserName = "myuser"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "1b824f5d-01b1-411b-8e44-5b05003ef81e",
                            RoleId = "ba566e0f-3d52-4967-a62c-1965b9f1e251"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.Audit", b =>
                {
                    b.Property<Guid>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AffectedColumns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NewValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AuditId");

                    b.HasIndex("UserId");

                    b.ToTable("Audits");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.Gender", b =>
                {
                    b.Property<Guid>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("GenderChar")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("GenderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("GenderId");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            GenderId = new Guid("9419f976-b406-4140-a67c-a0e291f5d3c2"),
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 562, DateTimeKind.Local).AddTicks(2915),
                            GenderChar = "F",
                            GenderName = "Female",
                            IsDeleted = false
                        },
                        new
                        {
                            GenderId = new Guid("10c2f63c-7708-4574-a036-623d5938efe8"),
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 563, DateTimeKind.Local).AddTicks(8965),
                            GenderChar = "M",
                            GenderName = "Male",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.GradeModuleRoster", b =>
                {
                    b.Property<Guid>("GradeModuleRosterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<int>("GradeInt")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ModuleCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GradeModuleRosterId");

                    b.HasIndex("ModuleCodeId");

                    b.ToTable("GradeModuleRoster");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.ModuleCode", b =>
                {
                    b.Property<Guid>("ModuleCodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModuleCodeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ModuleCodeId");

                    b.ToTable("ModuleCodes");

                    b.HasData(
                        new
                        {
                            ModuleCodeId = new Guid("f3de7852-940b-40d0-9b4c-6a2a1c59e07a"),
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 585, DateTimeKind.Local).AddTicks(9813),
                            IsDeleted = false,
                            ModuleCodeName = "BASE"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("905bec96-8915-4b75-b61b-2df918682439"),
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 586, DateTimeKind.Local).AddTicks(402),
                            IsDeleted = false,
                            ModuleCodeName = "MML"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("7d646813-e2b8-42f7-8195-b9decfcee6b7"),
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 586, DateTimeKind.Local).AddTicks(419),
                            IsDeleted = false,
                            ModuleCodeName = "LHC"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("7cae3435-4a0a-4d06-b580-1a822b5a627d"),
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 586, DateTimeKind.Local).AddTicks(425),
                            IsDeleted = false,
                            ModuleCodeName = "AGCLM"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("2038e304-d38d-48fc-9b5d-63080b883aad"),
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 586, DateTimeKind.Local).AddTicks(429),
                            IsDeleted = false,
                            ModuleCodeName = "ABCP"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("b6150676-5cba-4920-a091-9788e835300d"),
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 586, DateTimeKind.Local).AddTicks(433),
                            IsDeleted = false,
                            ModuleCodeName = "ENG"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("e5c6dd71-3d19-4ad5-b38b-aa31eb266746"),
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 586, DateTimeKind.Local).AddTicks(453),
                            IsDeleted = false,
                            ModuleCodeName = "AFR/XHO"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("172daea1-ee24-43f3-a246-7568dd2bec27"),
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 586, DateTimeKind.Local).AddTicks(457),
                            IsDeleted = false,
                            ModuleCodeName = "LO"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("170927b9-b687-4114-ad8b-88c28ad70823"),
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 586, DateTimeKind.Local).AddTicks(462),
                            IsDeleted = false,
                            ModuleCodeName = "EXAM"
                        });
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.Student", b =>
                {
                    b.Property<Guid>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Extra1ModuleCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Extra1SubjString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Extra2ModuleCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Extra2SubjString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Extra3ModuleCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Extra3SubjString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FridayModuleCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FridaySubjString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MondayModuleCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MondaySubjString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QRCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StudentClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudentGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StudentNr")
                        .HasColumnType("int");

                    b.Property<Guid?>("ThursdayModuleCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ThursdaySubjString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TuesdayModuleCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TuesdaySubjString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("WednesdayModuleCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WednesdaySubjString")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.HasIndex("Extra1ModuleCodeId");

                    b.HasIndex("Extra2ModuleCodeId");

                    b.HasIndex("Extra3ModuleCodeId");

                    b.HasIndex("FridayModuleCodeId");

                    b.HasIndex("GenderId");

                    b.HasIndex("MondayModuleCodeId");

                    b.HasIndex("StudentClassId");

                    b.HasIndex("StudentGroupId");

                    b.HasIndex("ThursdayModuleCodeId");

                    b.HasIndex("TuesdayModuleCodeId");

                    b.HasIndex("WednesdayModuleCodeId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentClass", b =>
                {
                    b.Property<Guid>("StudentClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClassChar")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GradeInt")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("StudentClassId");

                    b.ToTable("StudentClasses");

                    b.HasData(
                        new
                        {
                            StudentClassId = new Guid("61690ab1-0eb0-40b4-ad08-d13121969679"),
                            ClassChar = "A",
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(2577),
                            DisplayName = "8A",
                            GradeInt = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("f1fa680f-56fd-4bf2-9e15-621c4f88aa94"),
                            ClassChar = "B",
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(2611),
                            DisplayName = "8B",
                            GradeInt = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("48680a2a-e656-47e7-89c2-a0ee9945a609"),
                            ClassChar = "C",
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(2615),
                            DisplayName = "8C",
                            GradeInt = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("ad0380be-723b-4bc0-a433-5ab9910fd846"),
                            ClassChar = "D",
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(2617),
                            DisplayName = "8D",
                            GradeInt = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("8f774f0a-f8d6-4826-9275-90619c61f444"),
                            ClassChar = "E",
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(2619),
                            DisplayName = "8E",
                            GradeInt = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("098f4c2d-f7c1-4e49-9bd6-a4d7d788b93a"),
                            ClassChar = "F",
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(2621),
                            DisplayName = "8F",
                            GradeInt = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("9fe14608-8661-4fe7-9828-d0c2c357fe82"),
                            ClassChar = "G",
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(2633),
                            DisplayName = "8G",
                            GradeInt = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("447d1164-8b32-49a7-a370-f29436359b3d"),
                            ClassChar = "A",
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(2635),
                            DisplayName = "9A",
                            GradeInt = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("0b317356-d7e7-4b89-9a1d-e037dc70687c"),
                            ClassChar = "B",
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(2637),
                            DisplayName = "9B",
                            GradeInt = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("efb3e9f9-f71a-440c-8ffe-d1a7cb9f2011"),
                            ClassChar = "C",
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(2639),
                            DisplayName = "9C",
                            GradeInt = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("c758a601-efa2-4fb9-8850-1113ed04c012"),
                            ClassChar = "D",
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(2641),
                            DisplayName = "9D",
                            GradeInt = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("06b0c827-6632-4085-b3f3-e874ee11d29c"),
                            ClassChar = "E",
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(2643),
                            DisplayName = "9E",
                            GradeInt = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("a2b86ff0-2b14-4231-8aac-8193dc9e538b"),
                            ClassChar = "F",
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(2645),
                            DisplayName = "9F",
                            GradeInt = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("86a8d298-a796-4cf2-9f95-5b117463f3fb"),
                            ClassChar = "G",
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(2648),
                            DisplayName = "9G",
                            GradeInt = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("6da33d17-4cd0-428f-b108-8e297b68c357"),
                            ClassChar = "A",
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(2652),
                            DisplayName = "10A",
                            GradeInt = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("e7d7a90d-3420-4408-bc51-fa6e847d482a"),
                            ClassChar = "B",
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(2654),
                            DisplayName = "10B",
                            GradeInt = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("ce9aea06-5726-4e27-8bfa-500cdcedc0cb"),
                            ClassChar = "C",
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(2657),
                            DisplayName = "10C",
                            GradeInt = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("262e8fa1-7635-4720-9061-99577b940402"),
                            ClassChar = "D",
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(2659),
                            DisplayName = "10D",
                            GradeInt = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("f547486d-e4de-4e6c-9098-fa0a3a4dfe02"),
                            ClassChar = "E",
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(2661),
                            DisplayName = "10E",
                            GradeInt = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("0cf70d9c-0a7c-4327-ba47-0ddd31a8b1f8"),
                            ClassChar = "F",
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(2664),
                            DisplayName = "10F",
                            GradeInt = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("f90686d8-b18f-479e-aa47-bf71cc302975"),
                            ClassChar = "G",
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(2666),
                            DisplayName = "10G",
                            GradeInt = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("d029e38a-6a78-4596-8ca3-167e2c07c8ec"),
                            ClassChar = "A",
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(2668),
                            DisplayName = "11A",
                            GradeInt = 11,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("245b6882-ecc2-4b7a-8d30-c7bf20d50ec5"),
                            ClassChar = "B",
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(2673),
                            DisplayName = "11B",
                            GradeInt = 11,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("839218ac-8cef-477f-84de-ca9a3dbf5b10"),
                            ClassChar = "C",
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(2675),
                            DisplayName = "11C",
                            GradeInt = 11,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("f74e03bd-11f8-44ca-abb0-d3ba5f98ec2a"),
                            ClassChar = "D",
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(2677),
                            DisplayName = "11D",
                            GradeInt = 11,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("9c88e7b4-652b-4ab7-84ad-395bce0a8f26"),
                            ClassChar = "E",
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(2680),
                            DisplayName = "11E",
                            GradeInt = 11,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("a8cdec52-89ca-4870-95b0-978b45cfcaf9"),
                            ClassChar = "F",
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(2682),
                            DisplayName = "11F",
                            GradeInt = 11,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("8142ed26-97a0-4aab-a159-f4281cefeef9"),
                            ClassChar = "G",
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(2684),
                            DisplayName = "11G",
                            GradeInt = 11,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("b83570ad-a950-442c-a1c7-a29e396d994d"),
                            ClassChar = "A",
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(2686),
                            DisplayName = "12A",
                            GradeInt = 12,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("e6d8d9b7-f137-4703-b287-c656a6fbb9f2"),
                            ClassChar = "B",
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(2688),
                            DisplayName = "12B",
                            GradeInt = 12,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("2ec6a424-833f-4f0c-a165-059eda4fbaa2"),
                            ClassChar = "C",
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(2693),
                            DisplayName = "12C",
                            GradeInt = 12,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("4c30dd43-1ee1-4351-98e5-e1de2f4650c1"),
                            ClassChar = "D",
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(2695),
                            DisplayName = "12D",
                            GradeInt = 12,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("ca2e906e-a86c-4263-abfe-b0199e7dac66"),
                            ClassChar = "E",
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(2697),
                            DisplayName = "12E",
                            GradeInt = 12,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("1c56d388-6adb-4706-be12-350f2d5cef1e"),
                            ClassChar = "F",
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(2699),
                            DisplayName = "12F",
                            GradeInt = 12,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("132a786f-59ed-481a-b894-0c303f3513fe"),
                            ClassChar = "G",
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(2701),
                            DisplayName = "12G",
                            GradeInt = 12,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentGroup", b =>
                {
                    b.Property<Guid>("StudentGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupChar")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("GroupInt")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("StudentGroupId");

                    b.ToTable("StudentGroups");

                    b.HasData(
                        new
                        {
                            StudentGroupId = new Guid("1e114edc-e597-48d7-8ce8-0a96728f64a5"),
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(4721),
                            DisplayName = "G1",
                            GroupChar = "G",
                            GroupInt = 1,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentGroupId = new Guid("0366175c-6929-49b7-b373-8237c40268a2"),
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(4737),
                            DisplayName = "G2",
                            GroupChar = "G",
                            GroupInt = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentGroupId = new Guid("80c38876-25d9-429b-98dd-cd1bfc5aa488"),
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(4739),
                            DisplayName = "G3",
                            GroupChar = "G",
                            GroupInt = 3,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentGroupId = new Guid("5fec4d46-3396-4914-bb4c-bd293dac4d89"),
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(4747),
                            DisplayName = "G4",
                            GroupChar = "G",
                            GroupInt = 4,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentGroupId = new Guid("54525236-1d4a-4cb7-8366-55ce99b839a9"),
                            DateCreated = new DateTime(2021, 10, 12, 14, 40, 16, 565, DateTimeKind.Local).AddTicks(4749),
                            DisplayName = "G5",
                            GroupChar = "G",
                            GroupInt = 5,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentScreening", b =>
                {
                    b.Property<Guid>("StudentScreeningId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdmittedSeverPneumonia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnyOfTheFollowingSymptoms")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttendHealthFacility14Days")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CloseContactInfectedPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CloseContactProbableInfectedPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("GeneralSenseWellbeing")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HighRiskTravel14Days")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("QRCodeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ScreeningTimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SufferFromChronicDisease")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WearingAMask")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentScreeningId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentScreening");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentScreeningTemp", b =>
                {
                    b.Property<Guid>("StudentScreeningTempId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdmittedSeverPneumonia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnyOfTheFollowingSymptoms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttendHealthFacility14Days")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CloseContactInfectedPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CloseContactProbableInfectedPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("GeneralSenseWellbeing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HighRiskTravel14Days")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("QRCodeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RowNumber")
                        .HasColumnType("int");

                    b.Property<string>("RowType")
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime?>("ScreeningTimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SufferFromChronicDisease")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WearingAMask")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentScreeningTempId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentScreeningTemps");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentTemp", b =>
                {
                    b.Property<Guid>("StudentTempId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Extra1ModuleCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Extra1SubjString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Extra2ModuleCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Extra2SubjString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Extra3ModuleCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Extra3SubjString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FridayModuleCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FridaySubjString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GradeString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MondayModuleCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MondaySubjString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QRCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RowNumber")
                        .HasColumnType("int");

                    b.Property<string>("RowType")
                        .HasColumnType("nvarchar(1)");

                    b.Property<Guid?>("StudentClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StudentGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("StudentNr")
                        .HasColumnType("int");

                    b.Property<Guid?>("ThursdayModuleCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ThursdaySubjString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TuesdayModuleCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TuesdaySubjString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("WednesdayModuleCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WednesdaySubjString")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentTempId");

                    b.HasIndex("Extra1ModuleCodeId");

                    b.HasIndex("Extra2ModuleCodeId");

                    b.HasIndex("Extra3ModuleCodeId");

                    b.HasIndex("FridayModuleCodeId");

                    b.HasIndex("GenderId");

                    b.HasIndex("MondayModuleCodeId");

                    b.HasIndex("StudentClassId");

                    b.HasIndex("StudentGroupId");

                    b.HasIndex("ThursdayModuleCodeId");

                    b.HasIndex("TuesdayModuleCodeId");

                    b.HasIndex("WednesdayModuleCodeId");

                    b.ToTable("StudentTemps");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.Audit", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("IdentityUser");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.GradeModuleRoster", b =>
                {
                    b.HasOne("WebApp_ExcelFileProcessor.Models.ModuleCode", "ModuleCode")
                        .WithMany()
                        .HasForeignKey("ModuleCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModuleCode");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.Student", b =>
                {
                    b.HasOne("WebApp_ExcelFileProcessor.Models.ModuleCode", "Extra1ModuleCode")
                        .WithMany()
                        .HasForeignKey("Extra1ModuleCodeId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.ModuleCode", "Extra2ModuleCode")
                        .WithMany()
                        .HasForeignKey("Extra2ModuleCodeId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.ModuleCode", "Extra3ModuleCode")
                        .WithMany()
                        .HasForeignKey("Extra3ModuleCodeId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.ModuleCode", "FridayModuleCode")
                        .WithMany()
                        .HasForeignKey("FridayModuleCodeId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.Gender", "Gender")
                        .WithMany("Students")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApp_ExcelFileProcessor.Models.ModuleCode", "MondayModuleCode")
                        .WithMany()
                        .HasForeignKey("MondayModuleCodeId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.StudentClass", "StudentClass")
                        .WithMany("Students")
                        .HasForeignKey("StudentClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApp_ExcelFileProcessor.Models.StudentGroup", "StudentGroup")
                        .WithMany("Students")
                        .HasForeignKey("StudentGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApp_ExcelFileProcessor.Models.ModuleCode", "ThursdayModuleCode")
                        .WithMany()
                        .HasForeignKey("ThursdayModuleCodeId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.ModuleCode", "TuesdayModuleCode")
                        .WithMany()
                        .HasForeignKey("TuesdayModuleCodeId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.ModuleCode", "WednesdayModuleCode")
                        .WithMany()
                        .HasForeignKey("WednesdayModuleCodeId");

                    b.Navigation("Extra1ModuleCode");

                    b.Navigation("Extra2ModuleCode");

                    b.Navigation("Extra3ModuleCode");

                    b.Navigation("FridayModuleCode");

                    b.Navigation("Gender");

                    b.Navigation("MondayModuleCode");

                    b.Navigation("StudentClass");

                    b.Navigation("StudentGroup");

                    b.Navigation("ThursdayModuleCode");

                    b.Navigation("TuesdayModuleCode");

                    b.Navigation("WednesdayModuleCode");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentScreening", b =>
                {
                    b.HasOne("WebApp_ExcelFileProcessor.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentScreeningTemp", b =>
                {
                    b.HasOne("WebApp_ExcelFileProcessor.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentTemp", b =>
                {
                    b.HasOne("WebApp_ExcelFileProcessor.Models.ModuleCode", "Extra1ModuleCode")
                        .WithMany()
                        .HasForeignKey("Extra1ModuleCodeId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.ModuleCode", "Extra2ModuleCode")
                        .WithMany()
                        .HasForeignKey("Extra2ModuleCodeId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.ModuleCode", "Extra3ModuleCode")
                        .WithMany()
                        .HasForeignKey("Extra3ModuleCodeId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.ModuleCode", "FridayModuleCode")
                        .WithMany()
                        .HasForeignKey("FridayModuleCodeId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.ModuleCode", "MondayModuleCode")
                        .WithMany()
                        .HasForeignKey("MondayModuleCodeId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.StudentClass", "StudentClass")
                        .WithMany()
                        .HasForeignKey("StudentClassId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.StudentGroup", "StudentGroup")
                        .WithMany()
                        .HasForeignKey("StudentGroupId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.ModuleCode", "ThursdayModuleCode")
                        .WithMany()
                        .HasForeignKey("ThursdayModuleCodeId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.ModuleCode", "TuesdayModuleCode")
                        .WithMany()
                        .HasForeignKey("TuesdayModuleCodeId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.ModuleCode", "WednesdayModuleCode")
                        .WithMany()
                        .HasForeignKey("WednesdayModuleCodeId");

                    b.Navigation("Extra1ModuleCode");

                    b.Navigation("Extra2ModuleCode");

                    b.Navigation("Extra3ModuleCode");

                    b.Navigation("FridayModuleCode");

                    b.Navigation("Gender");

                    b.Navigation("MondayModuleCode");

                    b.Navigation("StudentClass");

                    b.Navigation("StudentGroup");

                    b.Navigation("ThursdayModuleCode");

                    b.Navigation("TuesdayModuleCode");

                    b.Navigation("WednesdayModuleCode");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.Gender", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentClass", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentGroup", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
