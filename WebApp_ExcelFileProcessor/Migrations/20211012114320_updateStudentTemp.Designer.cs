// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp_ExcelFileProcessor.Data;

namespace WebApp_ExcelFileProcessor.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211012114320_updateStudentTemp")]
    partial class updateStudentTemp
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "ba566e0f-3d52-4967-a62c-1965b9f1e251",
                            ConcurrencyStamp = "7c6046b9-5c8b-45d1-b859-262cc4d31586",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "1b824f5d-01b1-411b-8e44-5b05003ef81e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0ef22805-e2dd-4ea1-9af5-2c84385fdefb",
                            Email = "admin@fileprocessor.co.za",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@FILEPROCESSOR.CO.ZA",
                            NormalizedUserName = "MYUSER",
                            PasswordHash = "AQAAAAEAACcQAAAAEIwJcQDrdKbQg05ksUpk+s2WdHpzUbAiJ7YwZhkKl1/x9K4ivi+rXPFYrP7jNQkgbg==",
                            PhoneNumber = "0413743172",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "95352f8d-53ad-459f-bddc-72d015a2cd6c",
                            TwoFactorEnabled = false,
                            UserName = "myuser"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "1b824f5d-01b1-411b-8e44-5b05003ef81e",
                            RoleId = "ba566e0f-3d52-4967-a62c-1965b9f1e251"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.Audit", b =>
                {
                    b.Property<Guid>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AffectedColumns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NewValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AuditId");

                    b.HasIndex("UserId");

                    b.ToTable("Audits");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.Gender", b =>
                {
                    b.Property<Guid>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("GenderChar")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("GenderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("GenderId");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            GenderId = new Guid("7f0c3d06-5995-4053-8917-8666be92442b"),
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 48, DateTimeKind.Local).AddTicks(1472),
                            GenderChar = "F",
                            GenderName = "Female",
                            IsDeleted = false
                        },
                        new
                        {
                            GenderId = new Guid("44da986c-d23d-4cbf-a301-336e61b31756"),
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 57, DateTimeKind.Local).AddTicks(2688),
                            GenderChar = "M",
                            GenderName = "Male",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.GradeModuleRoster", b =>
                {
                    b.Property<Guid>("GradeModuleRosterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<int>("GradeInt")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ModuleCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GradeModuleRosterId");

                    b.HasIndex("ModuleCodeId");

                    b.ToTable("GradeModuleRoster");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.ModuleCode", b =>
                {
                    b.Property<Guid>("ModuleCodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModuleCodeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ModuleCodeId");

                    b.ToTable("ModuleCodes");

                    b.HasData(
                        new
                        {
                            ModuleCodeId = new Guid("dd7ba8d3-c392-43f6-98d9-36ce7d38e12e"),
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 91, DateTimeKind.Local).AddTicks(7086),
                            IsDeleted = false,
                            ModuleCodeName = "BASE"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("14b97ee8-e48f-4984-a513-836df6d5f051"),
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 91, DateTimeKind.Local).AddTicks(7552),
                            IsDeleted = false,
                            ModuleCodeName = "MML"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("f9d9db71-6f0b-4bb8-a212-b7d1925184a3"),
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 91, DateTimeKind.Local).AddTicks(7565),
                            IsDeleted = false,
                            ModuleCodeName = "LHC"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("e0a57603-e00a-433e-a8dd-505dc29203d1"),
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 91, DateTimeKind.Local).AddTicks(7581),
                            IsDeleted = false,
                            ModuleCodeName = "AGCLM"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("a4ce1b9d-8001-481a-87db-e94afd350138"),
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 91, DateTimeKind.Local).AddTicks(7584),
                            IsDeleted = false,
                            ModuleCodeName = "ABCP"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("e9cd8012-f84c-4dc5-87a7-b15dc091ea31"),
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 91, DateTimeKind.Local).AddTicks(7587),
                            IsDeleted = false,
                            ModuleCodeName = "ENG"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("c2764484-62d6-43da-81a4-f5bbdd716976"),
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 91, DateTimeKind.Local).AddTicks(7591),
                            IsDeleted = false,
                            ModuleCodeName = "AFR/XHO"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("bbe2fe92-d583-481a-af5d-adca0af227b6"),
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 91, DateTimeKind.Local).AddTicks(7594),
                            IsDeleted = false,
                            ModuleCodeName = "LO"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("d5543731-5117-444c-bd08-5330283e960a"),
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 91, DateTimeKind.Local).AddTicks(7597),
                            IsDeleted = false,
                            ModuleCodeName = "EXAM"
                        });
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.Student", b =>
                {
                    b.Property<Guid>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QRCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StudentClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudentGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StudentNr")
                        .HasColumnType("int");

                    b.HasKey("StudentId");

                    b.HasIndex("GenderId");

                    b.HasIndex("StudentClassId");

                    b.HasIndex("StudentGroupId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentClass", b =>
                {
                    b.Property<Guid>("StudentClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClassChar")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GradeInt")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("StudentClassId");

                    b.ToTable("StudentClasses");

                    b.HasData(
                        new
                        {
                            StudentClassId = new Guid("20fc4941-8b96-4222-a2d9-97c9bd8ce147"),
                            ClassChar = "A",
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 63, DateTimeKind.Local).AddTicks(5953),
                            DisplayName = "8A",
                            GradeInt = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("bde6041a-de3d-4c5c-9f68-5977ccd1ec89"),
                            ClassChar = "B",
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 63, DateTimeKind.Local).AddTicks(6015),
                            DisplayName = "8B",
                            GradeInt = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("7d59a70b-4f55-472a-a373-7020e95e8926"),
                            ClassChar = "C",
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 63, DateTimeKind.Local).AddTicks(6022),
                            DisplayName = "8C",
                            GradeInt = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("8a6ec17d-c19f-4ecf-804a-6668bc26502f"),
                            ClassChar = "D",
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 63, DateTimeKind.Local).AddTicks(6028),
                            DisplayName = "8D",
                            GradeInt = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("c8f1649b-4026-4e5f-a817-193701e9d95a"),
                            ClassChar = "E",
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 63, DateTimeKind.Local).AddTicks(6034),
                            DisplayName = "8E",
                            GradeInt = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("1abffeb5-ce73-4dbe-adb5-6262b2712009"),
                            ClassChar = "F",
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 63, DateTimeKind.Local).AddTicks(6040),
                            DisplayName = "8F",
                            GradeInt = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("a53bddd6-dcde-4fe7-8256-a3a968359a85"),
                            ClassChar = "G",
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 63, DateTimeKind.Local).AddTicks(6046),
                            DisplayName = "8G",
                            GradeInt = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("1d0ac70a-2c1f-4adc-903c-cb6251f75971"),
                            ClassChar = "A",
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 63, DateTimeKind.Local).AddTicks(6076),
                            DisplayName = "9A",
                            GradeInt = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("b22a3853-20f7-4421-8da3-fc60c4a8a659"),
                            ClassChar = "B",
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 63, DateTimeKind.Local).AddTicks(6082),
                            DisplayName = "9B",
                            GradeInt = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("b86479d2-021e-48ec-bf77-1c3b107e7dae"),
                            ClassChar = "C",
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 63, DateTimeKind.Local).AddTicks(6092),
                            DisplayName = "9C",
                            GradeInt = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("9ccb9997-fcee-4509-bce2-bb922c24a880"),
                            ClassChar = "D",
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 63, DateTimeKind.Local).AddTicks(6098),
                            DisplayName = "9D",
                            GradeInt = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("db0340a8-4b0c-4181-85a1-493b299954be"),
                            ClassChar = "E",
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 63, DateTimeKind.Local).AddTicks(6103),
                            DisplayName = "9E",
                            GradeInt = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("09f148cd-b69f-4607-9271-3205b9b01d9d"),
                            ClassChar = "F",
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 63, DateTimeKind.Local).AddTicks(6108),
                            DisplayName = "9F",
                            GradeInt = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("4a2a2e1f-3406-4cf2-91de-54cb82ad41c8"),
                            ClassChar = "G",
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 63, DateTimeKind.Local).AddTicks(6114),
                            DisplayName = "9G",
                            GradeInt = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("958604ab-e227-4e56-b8b9-011b0694b335"),
                            ClassChar = "A",
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 63, DateTimeKind.Local).AddTicks(6120),
                            DisplayName = "10A",
                            GradeInt = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("1ba7f645-ecdb-445b-968e-c1ae09bdb4ad"),
                            ClassChar = "B",
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 63, DateTimeKind.Local).AddTicks(6132),
                            DisplayName = "10B",
                            GradeInt = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("a0fa6747-3954-4fa2-b8c8-f71afd50732a"),
                            ClassChar = "C",
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 63, DateTimeKind.Local).AddTicks(6139),
                            DisplayName = "10C",
                            GradeInt = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("6ffc9962-2e4c-44c0-9b88-ce552a292203"),
                            ClassChar = "D",
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 63, DateTimeKind.Local).AddTicks(6145),
                            DisplayName = "10D",
                            GradeInt = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("8af8bcec-e274-4325-bc6c-4cef7bfd1f21"),
                            ClassChar = "E",
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 63, DateTimeKind.Local).AddTicks(6150),
                            DisplayName = "10E",
                            GradeInt = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("9c2e46b8-c092-477d-b00f-93b7cb7af0e2"),
                            ClassChar = "F",
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 63, DateTimeKind.Local).AddTicks(6156),
                            DisplayName = "10F",
                            GradeInt = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("dd48bae3-3770-421b-b6f5-ab0c0b109769"),
                            ClassChar = "G",
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 63, DateTimeKind.Local).AddTicks(6161),
                            DisplayName = "10G",
                            GradeInt = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("eb62cec8-52f3-4373-9fd4-ebabb3ab89e9"),
                            ClassChar = "A",
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 63, DateTimeKind.Local).AddTicks(6166),
                            DisplayName = "11A",
                            GradeInt = 11,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("38eac2c3-f0fa-4c0f-84c7-7293fcc28537"),
                            ClassChar = "B",
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 63, DateTimeKind.Local).AddTicks(6172),
                            DisplayName = "11B",
                            GradeInt = 11,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("2741cd2d-8160-4f74-98cc-3c211ce9d337"),
                            ClassChar = "C",
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 63, DateTimeKind.Local).AddTicks(6184),
                            DisplayName = "11C",
                            GradeInt = 11,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("3c171cfc-6dbb-4c06-8ce6-e49d645d835b"),
                            ClassChar = "D",
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 63, DateTimeKind.Local).AddTicks(6189),
                            DisplayName = "11D",
                            GradeInt = 11,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("bf05d880-f7ae-4890-8bf4-e3515cb6d62a"),
                            ClassChar = "E",
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 63, DateTimeKind.Local).AddTicks(6194),
                            DisplayName = "11E",
                            GradeInt = 11,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("fa5dff23-e28a-4a27-b28e-2b8ff568b89c"),
                            ClassChar = "F",
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 63, DateTimeKind.Local).AddTicks(6200),
                            DisplayName = "11F",
                            GradeInt = 11,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("43cae22e-2db1-48ae-8cac-edc49356937f"),
                            ClassChar = "G",
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 63, DateTimeKind.Local).AddTicks(6205),
                            DisplayName = "11G",
                            GradeInt = 11,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("6161703e-691f-4120-8281-93d78ef542fe"),
                            ClassChar = "A",
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 63, DateTimeKind.Local).AddTicks(6211),
                            DisplayName = "12A",
                            GradeInt = 12,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("8eb7a132-29db-461f-aaaa-c80d1b59b2aa"),
                            ClassChar = "B",
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 63, DateTimeKind.Local).AddTicks(6216),
                            DisplayName = "12B",
                            GradeInt = 12,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("772523ec-aaca-4d97-8c33-3bac0a5ce1bc"),
                            ClassChar = "C",
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 63, DateTimeKind.Local).AddTicks(6222),
                            DisplayName = "12C",
                            GradeInt = 12,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("6366bc18-ffb4-4828-901c-1de5181082fc"),
                            ClassChar = "D",
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 63, DateTimeKind.Local).AddTicks(6234),
                            DisplayName = "12D",
                            GradeInt = 12,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("a22f307a-4411-45bb-b915-2ab8ca5edc4e"),
                            ClassChar = "E",
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 63, DateTimeKind.Local).AddTicks(6240),
                            DisplayName = "12E",
                            GradeInt = 12,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("50e08172-6d74-4508-9069-304e5593a9b3"),
                            ClassChar = "F",
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 63, DateTimeKind.Local).AddTicks(6245),
                            DisplayName = "12F",
                            GradeInt = 12,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("9448ae89-7d14-4c40-986e-ff47e8ead889"),
                            ClassChar = "G",
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 63, DateTimeKind.Local).AddTicks(6251),
                            DisplayName = "12G",
                            GradeInt = 12,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentGroup", b =>
                {
                    b.Property<Guid>("StudentGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupChar")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("GroupInt")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("StudentGroupId");

                    b.ToTable("StudentGroups");

                    b.HasData(
                        new
                        {
                            StudentGroupId = new Guid("d621dc5d-ab8c-46e5-b434-0d556c291c28"),
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 64, DateTimeKind.Local).AddTicks(1002),
                            DisplayName = "G1",
                            GroupChar = "G",
                            GroupInt = 1,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentGroupId = new Guid("9cac2d72-d7f9-401b-b7db-6597ee2f26fc"),
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 64, DateTimeKind.Local).AddTicks(1038),
                            DisplayName = "G2",
                            GroupChar = "G",
                            GroupInt = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentGroupId = new Guid("d26fb98f-f6e7-44a6-ac1b-a28823b1a363"),
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 64, DateTimeKind.Local).AddTicks(1045),
                            DisplayName = "G3",
                            GroupChar = "G",
                            GroupInt = 3,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentGroupId = new Guid("51675d60-e9a4-4e89-a8f1-918cd7e48edc"),
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 64, DateTimeKind.Local).AddTicks(1051),
                            DisplayName = "G4",
                            GroupChar = "G",
                            GroupInt = 4,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentGroupId = new Guid("76356861-1caa-4fdd-af4f-d7b8b3ef2c36"),
                            DateCreated = new DateTime(2021, 10, 12, 13, 43, 19, 64, DateTimeKind.Local).AddTicks(1069),
                            DisplayName = "G5",
                            GroupChar = "G",
                            GroupInt = 5,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentScreening", b =>
                {
                    b.Property<Guid>("StudentScreeningId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdmittedSeverPneumonia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnyOfTheFollowingSymptoms")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttendHealthFacility14Days")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CloseContactInfectedPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CloseContactProbableInfectedPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("GeneralSenseWellbeing")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HighRiskTravel14Days")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("QRCodeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ScreeningTimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SufferFromChronicDisease")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WearingAMask")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentScreeningId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentScreening");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentScreeningTemp", b =>
                {
                    b.Property<Guid>("StudentScreeningTempId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdmittedSeverPneumonia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnyOfTheFollowingSymptoms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttendHealthFacility14Days")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CloseContactInfectedPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CloseContactProbableInfectedPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("GeneralSenseWellbeing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HighRiskTravel14Days")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("QRCodeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RowNumber")
                        .HasColumnType("int");

                    b.Property<string>("RowType")
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime?>("ScreeningTimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SufferFromChronicDisease")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WearingAMask")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentScreeningTempId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentScreeningTemps");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentTemp", b =>
                {
                    b.Property<Guid>("StudentTempId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ExtraModuleCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExtraSubjString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FridayModuleCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FridaySubjString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MondayModuleCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MondaySubjString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QRCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RowNumber")
                        .HasColumnType("int");

                    b.Property<string>("RowType")
                        .HasColumnType("nvarchar(1)");

                    b.Property<Guid?>("StudentClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StudentGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("StudentNr")
                        .HasColumnType("int");

                    b.Property<Guid?>("ThursdayModuleCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ThursdaySubjString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TuesdayModuleCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TuesdaySubjString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("WednesdayModuleCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WednesdaySubjString")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentTempId");

                    b.HasIndex("ExtraModuleCodeId");

                    b.HasIndex("FridayModuleCodeId");

                    b.HasIndex("GenderId");

                    b.HasIndex("MondayModuleCodeId");

                    b.HasIndex("StudentClassId");

                    b.HasIndex("StudentGroupId");

                    b.HasIndex("ThursdayModuleCodeId");

                    b.HasIndex("TuesdayModuleCodeId");

                    b.HasIndex("WednesdayModuleCodeId");

                    b.ToTable("StudentTemps");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.Audit", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("IdentityUser");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.GradeModuleRoster", b =>
                {
                    b.HasOne("WebApp_ExcelFileProcessor.Models.ModuleCode", "ModuleCode")
                        .WithMany()
                        .HasForeignKey("ModuleCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModuleCode");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.Student", b =>
                {
                    b.HasOne("WebApp_ExcelFileProcessor.Models.Gender", "Gender")
                        .WithMany("Students")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApp_ExcelFileProcessor.Models.StudentClass", "StudentClass")
                        .WithMany("Students")
                        .HasForeignKey("StudentClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApp_ExcelFileProcessor.Models.StudentGroup", "StudentGroup")
                        .WithMany("Students")
                        .HasForeignKey("StudentGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gender");

                    b.Navigation("StudentClass");

                    b.Navigation("StudentGroup");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentScreening", b =>
                {
                    b.HasOne("WebApp_ExcelFileProcessor.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentScreeningTemp", b =>
                {
                    b.HasOne("WebApp_ExcelFileProcessor.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentTemp", b =>
                {
                    b.HasOne("WebApp_ExcelFileProcessor.Models.ModuleCode", "ExtraModuleCode")
                        .WithMany()
                        .HasForeignKey("ExtraModuleCodeId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.ModuleCode", "FridayModuleCode")
                        .WithMany()
                        .HasForeignKey("FridayModuleCodeId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.ModuleCode", "MondayModuleCode")
                        .WithMany()
                        .HasForeignKey("MondayModuleCodeId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.StudentClass", "StudentClass")
                        .WithMany()
                        .HasForeignKey("StudentClassId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.StudentGroup", "StudentGroup")
                        .WithMany()
                        .HasForeignKey("StudentGroupId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.ModuleCode", "ThursdayModuleCode")
                        .WithMany()
                        .HasForeignKey("ThursdayModuleCodeId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.ModuleCode", "TuesdayModuleCode")
                        .WithMany()
                        .HasForeignKey("TuesdayModuleCodeId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.ModuleCode", "WednesdayModuleCode")
                        .WithMany()
                        .HasForeignKey("WednesdayModuleCodeId");

                    b.Navigation("ExtraModuleCode");

                    b.Navigation("FridayModuleCode");

                    b.Navigation("Gender");

                    b.Navigation("MondayModuleCode");

                    b.Navigation("StudentClass");

                    b.Navigation("StudentGroup");

                    b.Navigation("ThursdayModuleCode");

                    b.Navigation("TuesdayModuleCode");

                    b.Navigation("WednesdayModuleCode");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.Gender", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentClass", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentGroup", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
