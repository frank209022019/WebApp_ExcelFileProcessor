// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp_ExcelFileProcessor.Data;

namespace WebApp_ExcelFileProcessor.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211011160721_addModuleCode")]
    partial class addModuleCode
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "ba566e0f-3d52-4967-a62c-1965b9f1e251",
                            ConcurrencyStamp = "ab63cede-0e23-4ffa-8538-467001dbc4ea",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "1b824f5d-01b1-411b-8e44-5b05003ef81e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "16eef300-8acf-423e-8d3b-8d2e28a57e74",
                            Email = "admin@fileprocessor.co.za",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@FILEPROCESSOR.CO.ZA",
                            NormalizedUserName = "MYUSER",
                            PasswordHash = "AQAAAAEAACcQAAAAEO1CH79A7nCmWM43MEsRpaBrkOnS5PFp2ISjPdXdDCP28qXZGxagRunel0ahhBtyYw==",
                            PhoneNumber = "0413743172",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "5ce5367c-816f-4188-9d9a-808a5be88d7f",
                            TwoFactorEnabled = false,
                            UserName = "myuser"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "1b824f5d-01b1-411b-8e44-5b05003ef81e",
                            RoleId = "ba566e0f-3d52-4967-a62c-1965b9f1e251"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.Audit", b =>
                {
                    b.Property<Guid>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AffectedColumns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NewValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AuditId");

                    b.HasIndex("UserId");

                    b.ToTable("Audits");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.Gender", b =>
                {
                    b.Property<Guid>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("GenderChar")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("GenderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("GenderId");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            GenderId = new Guid("54b23384-08fd-42dc-9973-e814310da409"),
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 682, DateTimeKind.Local).AddTicks(7368),
                            GenderChar = "F",
                            GenderName = "Female",
                            IsDeleted = false
                        },
                        new
                        {
                            GenderId = new Guid("56682314-63c3-4997-9d18-64a8a45e0286"),
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 683, DateTimeKind.Local).AddTicks(4162),
                            GenderChar = "M",
                            GenderName = "Male",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.ModuleCode", b =>
                {
                    b.Property<Guid>("ModuleCodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModuleCodeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ModuleCodeId");

                    b.ToTable("ModuleCodes");

                    b.HasData(
                        new
                        {
                            ModuleCodeId = new Guid("c605ff4f-41cc-44f9-be6a-fe913d0fb2eb"),
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 694, DateTimeKind.Local).AddTicks(787),
                            IsDeleted = false,
                            ModuleCodeName = "BASE"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("387cd4ff-933e-4ab7-acaa-b6f28a8b0328"),
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 694, DateTimeKind.Local).AddTicks(1084),
                            IsDeleted = false,
                            ModuleCodeName = "MML"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("691cdedf-8d2d-4b49-bb42-e724731623dc"),
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 694, DateTimeKind.Local).AddTicks(1093),
                            IsDeleted = false,
                            ModuleCodeName = "LHC"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("0587a4d9-7be6-45f7-b256-8916c5af55a3"),
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 694, DateTimeKind.Local).AddTicks(1095),
                            IsDeleted = false,
                            ModuleCodeName = "AGCLM"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("b105950d-abd6-4680-85fd-77a24b7ea9bc"),
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 694, DateTimeKind.Local).AddTicks(1104),
                            IsDeleted = false,
                            ModuleCodeName = "ABCP"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("ffe4760b-1218-48d3-aa73-4ecc62112689"),
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 694, DateTimeKind.Local).AddTicks(1110),
                            IsDeleted = false,
                            ModuleCodeName = "ENG"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("3dc31699-5d42-4687-9843-43e003625bab"),
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 694, DateTimeKind.Local).AddTicks(1112),
                            IsDeleted = false,
                            ModuleCodeName = "AFR/XHO"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("74793dc4-e0be-426b-95fd-51a26f222a01"),
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 694, DateTimeKind.Local).AddTicks(1114),
                            IsDeleted = false,
                            ModuleCodeName = "LO"
                        });
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.Student", b =>
                {
                    b.Property<Guid>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QRCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StudentClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudentColorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudentGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StudentNr")
                        .HasColumnType("int");

                    b.HasKey("StudentId");

                    b.HasIndex("GenderId");

                    b.HasIndex("StudentClassId");

                    b.HasIndex("StudentColorId");

                    b.HasIndex("StudentGroupId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentClass", b =>
                {
                    b.Property<Guid>("StudentClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClassChar")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GradeInt")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("StudentClassId");

                    b.ToTable("StudentClasses");

                    b.HasData(
                        new
                        {
                            StudentClassId = new Guid("e25af776-8149-4058-8b6b-28aa3b846651"),
                            ClassChar = "A",
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(4003),
                            DisplayName = "8A",
                            GradeInt = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("b25e58d2-9de2-4d0b-ada6-208e29b9f06f"),
                            ClassChar = "B",
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(4013),
                            DisplayName = "8B",
                            GradeInt = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("3f9ad489-f2ed-4268-9a96-a925de5f5b18"),
                            ClassChar = "C",
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(4023),
                            DisplayName = "8C",
                            GradeInt = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("42e6e868-dfbd-45b1-bc39-2dc1fef4e228"),
                            ClassChar = "D",
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(4025),
                            DisplayName = "8D",
                            GradeInt = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("09e0a5e5-7c79-47b5-8db9-3fdf50d93d98"),
                            ClassChar = "E",
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(4026),
                            DisplayName = "8E",
                            GradeInt = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("b387be03-15b8-4d00-85f4-d3f258df0021"),
                            ClassChar = "F",
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(4028),
                            DisplayName = "8F",
                            GradeInt = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("38b846b2-0501-4ad3-b6ad-6106f3ca9857"),
                            ClassChar = "G",
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(4030),
                            DisplayName = "8G",
                            GradeInt = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("ecf9bb4c-f47d-48a9-9650-9ffa91d63b79"),
                            ClassChar = "A",
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(4032),
                            DisplayName = "9A",
                            GradeInt = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("dc284a54-53c7-4e9f-8d70-b98c3b12a365"),
                            ClassChar = "B",
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(4034),
                            DisplayName = "9B",
                            GradeInt = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("988c71b3-8c8b-4370-823b-3e4272b79aef"),
                            ClassChar = "C",
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(4035),
                            DisplayName = "9C",
                            GradeInt = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("4e87d9e2-df5b-48d1-b1e5-90fc6725ad4c"),
                            ClassChar = "D",
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(4039),
                            DisplayName = "9D",
                            GradeInt = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("605d2200-c647-4048-b42d-6380dfc2e546"),
                            ClassChar = "E",
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(4041),
                            DisplayName = "9E",
                            GradeInt = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("81150e22-8e8f-42f6-aa77-bd0dff08e3a5"),
                            ClassChar = "F",
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(4042),
                            DisplayName = "9F",
                            GradeInt = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("24ac92dd-0e83-4e1e-9f6b-4616c99a23ee"),
                            ClassChar = "G",
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(4044),
                            DisplayName = "9G",
                            GradeInt = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("4e4bb89f-5463-4e68-997a-73b43313d379"),
                            ClassChar = "A",
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(4046),
                            DisplayName = "10A",
                            GradeInt = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("9d9576f9-760a-4f5a-89c6-4e2e7572f9d5"),
                            ClassChar = "B",
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(4047),
                            DisplayName = "10B",
                            GradeInt = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("89ec2781-dede-4c46-b4bd-6b2d6a90a5bc"),
                            ClassChar = "C",
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(4050),
                            DisplayName = "10C",
                            GradeInt = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("e4fc52aa-889f-4a8f-89f2-c3a04586404a"),
                            ClassChar = "D",
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(4051),
                            DisplayName = "10D",
                            GradeInt = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("9a3d06b0-ef01-40dd-8763-fe822fe5210a"),
                            ClassChar = "E",
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(4055),
                            DisplayName = "10E",
                            GradeInt = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("3dabd728-2793-4b03-8c73-ced0ad22dac5"),
                            ClassChar = "F",
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(4056),
                            DisplayName = "10F",
                            GradeInt = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("2fab2de9-0f16-4847-b71e-470897814fff"),
                            ClassChar = "G",
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(4058),
                            DisplayName = "10G",
                            GradeInt = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("232a04fd-6a11-434e-a403-3ab1e2d1d915"),
                            ClassChar = "A",
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(4059),
                            DisplayName = "11A",
                            GradeInt = 11,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("e27762c6-4093-4257-ab47-2d12de3cc699"),
                            ClassChar = "B",
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(4061),
                            DisplayName = "11B",
                            GradeInt = 11,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("e3ee9e11-cdab-4433-89df-0d95e8706d12"),
                            ClassChar = "C",
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(4063),
                            DisplayName = "11C",
                            GradeInt = 11,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("a00e117a-e940-4343-8422-c4650a2bf150"),
                            ClassChar = "D",
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(4064),
                            DisplayName = "11D",
                            GradeInt = 11,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("e4512b53-0ee2-43e4-b959-aa7836772a0b"),
                            ClassChar = "E",
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(4066),
                            DisplayName = "11E",
                            GradeInt = 11,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("de395678-9ecf-435e-ba73-42bf3fcd11fd"),
                            ClassChar = "F",
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(4069),
                            DisplayName = "11F",
                            GradeInt = 11,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("38ec7b19-4043-4a99-b289-6af75775a9a9"),
                            ClassChar = "G",
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(4071),
                            DisplayName = "11G",
                            GradeInt = 11,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("acf89b08-fdb1-433a-a290-871d0c8064cd"),
                            ClassChar = "A",
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(4072),
                            DisplayName = "12A",
                            GradeInt = 12,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("041d3f51-235a-44d4-81a9-507d23a8270b"),
                            ClassChar = "B",
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(4074),
                            DisplayName = "12B",
                            GradeInt = 12,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("26d5f490-13c0-4116-979d-dc759b979909"),
                            ClassChar = "C",
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(4076),
                            DisplayName = "12C",
                            GradeInt = 12,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("ceeed6b2-987d-492d-8642-2fe9d327e519"),
                            ClassChar = "D",
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(4077),
                            DisplayName = "12D",
                            GradeInt = 12,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("3c762a54-785b-4823-962c-07063d1fb505"),
                            ClassChar = "E",
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(4079),
                            DisplayName = "12E",
                            GradeInt = 12,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("d59d5f20-bd15-4af9-bdca-8d716c1a8ddf"),
                            ClassChar = "F",
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(4081),
                            DisplayName = "12F",
                            GradeInt = 12,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("8b6b99c1-ca81-4027-8a78-794989aaa534"),
                            ClassChar = "G",
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(4084),
                            DisplayName = "12G",
                            GradeInt = 12,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentColor", b =>
                {
                    b.Property<Guid>("StudentColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ColorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("StudentColorId");

                    b.ToTable("StudentColors");

                    b.HasData(
                        new
                        {
                            StudentColorId = new Guid("db7dd8ef-569a-4cd4-99dc-ee4700cd4dc5"),
                            ColorName = "Gold",
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(2672),
                            IsDeleted = false
                        },
                        new
                        {
                            StudentColorId = new Guid("db87c750-eb52-4e10-ab1e-0828f64de96b"),
                            ColorName = "Scarlet",
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(2685),
                            IsDeleted = false
                        },
                        new
                        {
                            StudentColorId = new Guid("533a9ede-e23b-451a-835d-52454d013f2f"),
                            ColorName = "Unassigned",
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(2687),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentGroup", b =>
                {
                    b.Property<Guid>("StudentGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupChar")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("GroupInt")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("StudentGroupId");

                    b.ToTable("StudentGroups");

                    b.HasData(
                        new
                        {
                            StudentGroupId = new Guid("9ac6ee6c-7a97-455a-82e1-7b93a601f766"),
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(5346),
                            DisplayName = "G1",
                            GroupChar = "G",
                            GroupInt = 1,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentGroupId = new Guid("9cfa71c2-5e85-4a0a-8650-c6b5d79b82f3"),
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(5355),
                            DisplayName = "G2",
                            GroupChar = "G",
                            GroupInt = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentGroupId = new Guid("80fb0695-40dd-4e5a-a84c-6124511d2a31"),
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(5358),
                            DisplayName = "G3",
                            GroupChar = "G",
                            GroupInt = 3,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentGroupId = new Guid("41ab0b1b-bbbe-4385-8e05-81d5b0ae656b"),
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(5359),
                            DisplayName = "G4",
                            GroupChar = "G",
                            GroupInt = 4,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentGroupId = new Guid("d450dcc1-db31-46d9-b6ea-ad9157b0fd2f"),
                            DateCreated = new DateTime(2021, 10, 11, 18, 7, 20, 684, DateTimeKind.Local).AddTicks(5361),
                            DisplayName = "G5",
                            GroupChar = "G",
                            GroupInt = 5,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentScreening", b =>
                {
                    b.Property<Guid>("StudentScreeningId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdmittedSeverPneumonia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnyOfTheFollowingSymptoms")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttendHealthFacility14Days")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CloseContactInfectedPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CloseContactProbableInfectedPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("GeneralSenseWellbeing")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HighRiskTravel14Days")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("QRCodeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ScreeningTimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SufferFromChronicDisease")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WearingAMask")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentScreeningId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentScreening");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentScreeningTemp", b =>
                {
                    b.Property<Guid>("StudentScreeningTempId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdmittedSeverPneumonia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnyOfTheFollowingSymptoms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttendHealthFacility14Days")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CloseContactInfectedPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CloseContactProbableInfectedPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("GeneralSenseWellbeing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HighRiskTravel14Days")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("QRCodeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RowNumber")
                        .HasColumnType("int");

                    b.Property<string>("RowType")
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime?>("ScreeningTimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SufferFromChronicDisease")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WearingAMask")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentScreeningTempId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentScreeningTemps");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentTemp", b =>
                {
                    b.Property<Guid>("StudentTempId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QRCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RowNumber")
                        .HasColumnType("int");

                    b.Property<string>("RowType")
                        .HasColumnType("nvarchar(1)");

                    b.Property<Guid?>("StudentClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StudentColorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StudentGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("StudentNr")
                        .HasColumnType("int");

                    b.HasKey("StudentTempId");

                    b.HasIndex("GenderId");

                    b.HasIndex("StudentClassId");

                    b.HasIndex("StudentColorId");

                    b.HasIndex("StudentGroupId");

                    b.ToTable("StudentTemps");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.Audit", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("IdentityUser");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.Student", b =>
                {
                    b.HasOne("WebApp_ExcelFileProcessor.Models.Gender", "Gender")
                        .WithMany("Students")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApp_ExcelFileProcessor.Models.StudentClass", "StudentClass")
                        .WithMany("Students")
                        .HasForeignKey("StudentClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApp_ExcelFileProcessor.Models.StudentColor", "StudentColor")
                        .WithMany("Students")
                        .HasForeignKey("StudentColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApp_ExcelFileProcessor.Models.StudentGroup", "StudentGroup")
                        .WithMany("Students")
                        .HasForeignKey("StudentGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gender");

                    b.Navigation("StudentClass");

                    b.Navigation("StudentColor");

                    b.Navigation("StudentGroup");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentScreening", b =>
                {
                    b.HasOne("WebApp_ExcelFileProcessor.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentScreeningTemp", b =>
                {
                    b.HasOne("WebApp_ExcelFileProcessor.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentTemp", b =>
                {
                    b.HasOne("WebApp_ExcelFileProcessor.Models.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.StudentClass", "StudentClass")
                        .WithMany()
                        .HasForeignKey("StudentClassId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.StudentColor", "StudentColor")
                        .WithMany()
                        .HasForeignKey("StudentColorId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.StudentGroup", "StudentGroup")
                        .WithMany()
                        .HasForeignKey("StudentGroupId");

                    b.Navigation("Gender");

                    b.Navigation("StudentClass");

                    b.Navigation("StudentColor");

                    b.Navigation("StudentGroup");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.Gender", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentClass", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentColor", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentGroup", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
