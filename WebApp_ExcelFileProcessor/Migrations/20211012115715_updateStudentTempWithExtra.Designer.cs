// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApp_ExcelFileProcessor.Data;

namespace WebApp_ExcelFileProcessor.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211012115715_updateStudentTempWithExtra")]
    partial class updateStudentTempWithExtra
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = "ba566e0f-3d52-4967-a62c-1965b9f1e251",
                            ConcurrencyStamp = "0e37993d-0371-40c2-852c-14ddea529395",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "1b824f5d-01b1-411b-8e44-5b05003ef81e",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c9e6d806-e498-40a2-bfb9-893cee53159f",
                            Email = "admin@fileprocessor.co.za",
                            EmailConfirmed = true,
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@FILEPROCESSOR.CO.ZA",
                            NormalizedUserName = "MYUSER",
                            PasswordHash = "AQAAAAEAACcQAAAAELqlyFh/Dgd13yNUbltFRTCtzr1R3+EY7MtPxBSI+MonqpLRHAcmXJzNhNPNJdHgjw==",
                            PhoneNumber = "0413743172",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "c6dc97fe-cd1e-4b6f-a5c6-7ef0f17f5a71",
                            TwoFactorEnabled = false,
                            UserName = "myuser"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = "1b824f5d-01b1-411b-8e44-5b05003ef81e",
                            RoleId = "ba566e0f-3d52-4967-a62c-1965b9f1e251"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.Audit", b =>
                {
                    b.Property<Guid>("AuditId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AffectedColumns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NewValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AuditId");

                    b.HasIndex("UserId");

                    b.ToTable("Audits");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.Gender", b =>
                {
                    b.Property<Guid>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("GenderChar")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("GenderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("GenderId");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            GenderId = new Guid("19d4115d-967d-4616-a27c-cc2cc9b7bcc6"),
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 49, DateTimeKind.Local).AddTicks(7127),
                            GenderChar = "F",
                            GenderName = "Female",
                            IsDeleted = false
                        },
                        new
                        {
                            GenderId = new Guid("8cd7c6e3-862f-4e46-9da3-128f469e7716"),
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 50, DateTimeKind.Local).AddTicks(5918),
                            GenderChar = "M",
                            GenderName = "Male",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.GradeModuleRoster", b =>
                {
                    b.Property<Guid>("GradeModuleRosterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<int>("GradeInt")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<Guid>("ModuleCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GradeModuleRosterId");

                    b.HasIndex("ModuleCodeId");

                    b.ToTable("GradeModuleRoster");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.ModuleCode", b =>
                {
                    b.Property<Guid>("ModuleCodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModuleCodeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ModuleCodeId");

                    b.ToTable("ModuleCodes");

                    b.HasData(
                        new
                        {
                            ModuleCodeId = new Guid("ffba507c-cba0-4350-971c-ad6667547f65"),
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 63, DateTimeKind.Local).AddTicks(2556),
                            IsDeleted = false,
                            ModuleCodeName = "BASE"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("0f64388f-6f7c-4ba9-9687-5025246eb24d"),
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 63, DateTimeKind.Local).AddTicks(2870),
                            IsDeleted = false,
                            ModuleCodeName = "MML"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("8b916611-fee0-4794-be3d-8d4d66a36994"),
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 63, DateTimeKind.Local).AddTicks(2879),
                            IsDeleted = false,
                            ModuleCodeName = "LHC"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("ee9fe3d7-50c9-4ce4-ab69-9d5d6bf8fc28"),
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 63, DateTimeKind.Local).AddTicks(2882),
                            IsDeleted = false,
                            ModuleCodeName = "AGCLM"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("0ca79e5d-8bec-4132-b373-99c330eadc41"),
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 63, DateTimeKind.Local).AddTicks(2884),
                            IsDeleted = false,
                            ModuleCodeName = "ABCP"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("b36f399d-8495-4a4e-926a-50a996aac7c3"),
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 63, DateTimeKind.Local).AddTicks(2887),
                            IsDeleted = false,
                            ModuleCodeName = "ENG"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("c1963027-8fb8-4db8-92fd-3b2b131db80e"),
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 63, DateTimeKind.Local).AddTicks(2889),
                            IsDeleted = false,
                            ModuleCodeName = "AFR/XHO"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("b1b6e464-0c6e-4c36-bc1d-2c1ee82c3d43"),
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 63, DateTimeKind.Local).AddTicks(2891),
                            IsDeleted = false,
                            ModuleCodeName = "LO"
                        },
                        new
                        {
                            ModuleCodeId = new Guid("8ab298a0-0104-4c96-bf76-354cfabea28d"),
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 63, DateTimeKind.Local).AddTicks(2898),
                            IsDeleted = false,
                            ModuleCodeName = "EXAM"
                        });
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.Student", b =>
                {
                    b.Property<Guid>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QRCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StudentClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudentGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("StudentNr")
                        .HasColumnType("int");

                    b.HasKey("StudentId");

                    b.HasIndex("GenderId");

                    b.HasIndex("StudentClassId");

                    b.HasIndex("StudentGroupId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentClass", b =>
                {
                    b.Property<Guid>("StudentClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClassChar")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GradeInt")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("StudentClassId");

                    b.ToTable("StudentClasses");

                    b.HasData(
                        new
                        {
                            StudentClassId = new Guid("b81eddf1-c9b5-497a-a976-6a12ac48441d"),
                            ClassChar = "A",
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(5626),
                            DisplayName = "8A",
                            GradeInt = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("6467e1cd-831c-4f4f-b9f7-12a2117f6b5e"),
                            ClassChar = "B",
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(5641),
                            DisplayName = "8B",
                            GradeInt = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("51d5b8b1-55ab-4773-84e6-bc45706e6c61"),
                            ClassChar = "C",
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(5644),
                            DisplayName = "8C",
                            GradeInt = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("42a8cd0d-5745-45d7-a526-985712da6e80"),
                            ClassChar = "D",
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(5712),
                            DisplayName = "8D",
                            GradeInt = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("7cdd63b2-2139-421c-b050-39b471718c5e"),
                            ClassChar = "E",
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(5714),
                            DisplayName = "8E",
                            GradeInt = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("1c8176c2-410f-44f2-8f89-f7d621d12a2b"),
                            ClassChar = "F",
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(5715),
                            DisplayName = "8F",
                            GradeInt = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("ce795186-175b-4ebe-9f89-548ededa14a5"),
                            ClassChar = "G",
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(5725),
                            DisplayName = "8G",
                            GradeInt = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("5da24ae3-6c7b-43a5-8031-5d4dba293904"),
                            ClassChar = "A",
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(5727),
                            DisplayName = "9A",
                            GradeInt = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("da3fbe47-cfef-448f-b064-42b68a6071ee"),
                            ClassChar = "B",
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(5729),
                            DisplayName = "9B",
                            GradeInt = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("d6106664-bea5-424f-bf59-e1f5ed7376cc"),
                            ClassChar = "C",
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(5730),
                            DisplayName = "9C",
                            GradeInt = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("19e2c990-4bf1-4086-9c90-7b2111daf36d"),
                            ClassChar = "D",
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(5732),
                            DisplayName = "9D",
                            GradeInt = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("c87359ec-8717-4790-adda-553b5facccc7"),
                            ClassChar = "E",
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(5734),
                            DisplayName = "9E",
                            GradeInt = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("79f1087b-4fad-442c-a26c-badd487921b0"),
                            ClassChar = "F",
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(5736),
                            DisplayName = "9F",
                            GradeInt = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("d40fe25c-68c9-4cee-8f47-7d253c046e79"),
                            ClassChar = "G",
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(5739),
                            DisplayName = "9G",
                            GradeInt = 9,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("8cc6166d-4637-4191-ae49-9c3c65872a56"),
                            ClassChar = "A",
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(5742),
                            DisplayName = "10A",
                            GradeInt = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("98ebeb99-9c2a-45ed-ac11-9c9ed3951574"),
                            ClassChar = "B",
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(5744),
                            DisplayName = "10B",
                            GradeInt = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("2540d53e-d649-4f01-9797-1d3969b0928a"),
                            ClassChar = "C",
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(5746),
                            DisplayName = "10C",
                            GradeInt = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("3afa7b4d-490b-4e3a-a5ae-f593e548b264"),
                            ClassChar = "D",
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(5748),
                            DisplayName = "10D",
                            GradeInt = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("8afc5d1b-bcad-4689-be60-65e62cc9ae01"),
                            ClassChar = "E",
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(5749),
                            DisplayName = "10E",
                            GradeInt = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("9cbc51b6-8a44-4480-98cc-6f1149c4e17f"),
                            ClassChar = "F",
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(5751),
                            DisplayName = "10F",
                            GradeInt = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("542b643d-1b44-469e-927c-621eee326cfe"),
                            ClassChar = "G",
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(5753),
                            DisplayName = "10G",
                            GradeInt = 10,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("ef950c54-8677-47b9-991e-5094513e8844"),
                            ClassChar = "A",
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(5754),
                            DisplayName = "11A",
                            GradeInt = 11,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("20796fb1-9320-42a0-8462-c0130674080f"),
                            ClassChar = "B",
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(5758),
                            DisplayName = "11B",
                            GradeInt = 11,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("39c4f5d9-e513-4caf-bf60-bd60990f7831"),
                            ClassChar = "C",
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(5760),
                            DisplayName = "11C",
                            GradeInt = 11,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("58703de0-798c-40e0-8d5a-df89ccf4a532"),
                            ClassChar = "D",
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(5762),
                            DisplayName = "11D",
                            GradeInt = 11,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("cc8b2c2a-39fc-4ec3-9c35-79a463c29418"),
                            ClassChar = "E",
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(5763),
                            DisplayName = "11E",
                            GradeInt = 11,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("3c333f83-35f3-49ea-8262-55958886700e"),
                            ClassChar = "F",
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(5765),
                            DisplayName = "11F",
                            GradeInt = 11,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("b81ac0b5-71f7-4c7c-aa7a-768df334c87b"),
                            ClassChar = "G",
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(5767),
                            DisplayName = "11G",
                            GradeInt = 11,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("7fe0acfa-6c71-48a7-9035-41d2779f4bc8"),
                            ClassChar = "A",
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(5768),
                            DisplayName = "12A",
                            GradeInt = 12,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("af693b88-c136-43b2-8450-81ef1d1a8572"),
                            ClassChar = "B",
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(5771),
                            DisplayName = "12B",
                            GradeInt = 12,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("00c14263-a0b7-49dd-afca-bd0cd62520bf"),
                            ClassChar = "C",
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(5774),
                            DisplayName = "12C",
                            GradeInt = 12,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("42452140-72d8-4f39-bb14-e6cb746a974f"),
                            ClassChar = "D",
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(5776),
                            DisplayName = "12D",
                            GradeInt = 12,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("82d5f97a-84e2-4bee-96bf-52af5f58787b"),
                            ClassChar = "E",
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(5778),
                            DisplayName = "12E",
                            GradeInt = 12,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("ac122c8f-45b0-45d5-bf59-ee16bf673619"),
                            ClassChar = "F",
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(5780),
                            DisplayName = "12F",
                            GradeInt = 12,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentClassId = new Guid("6f6de646-e5c4-4470-ade5-10554fa0961f"),
                            ClassChar = "G",
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(5781),
                            DisplayName = "12G",
                            GradeInt = 12,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentGroup", b =>
                {
                    b.Property<Guid>("StudentGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupChar")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("GroupInt")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("StudentGroupId");

                    b.ToTable("StudentGroups");

                    b.HasData(
                        new
                        {
                            StudentGroupId = new Guid("e5a20d26-91fa-4691-aaab-e55c3e8efa1f"),
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(7156),
                            DisplayName = "G1",
                            GroupChar = "G",
                            GroupInt = 1,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentGroupId = new Guid("bbfc21ad-e3e1-4920-a62e-43e8081c0111"),
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(7166),
                            DisplayName = "G2",
                            GroupChar = "G",
                            GroupInt = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentGroupId = new Guid("05978733-128a-4ad1-84d0-a9255225f4e6"),
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(7168),
                            DisplayName = "G3",
                            GroupChar = "G",
                            GroupInt = 3,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentGroupId = new Guid("83927c25-29b3-4b04-9bac-f04fe9676e66"),
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(7174),
                            DisplayName = "G4",
                            GroupChar = "G",
                            GroupInt = 4,
                            IsDeleted = false
                        },
                        new
                        {
                            StudentGroupId = new Guid("afc4441f-be5f-4394-b5f6-fb6eb63cc765"),
                            DateCreated = new DateTime(2021, 10, 12, 13, 57, 14, 51, DateTimeKind.Local).AddTicks(7175),
                            DisplayName = "G5",
                            GroupChar = "G",
                            GroupInt = 5,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentScreening", b =>
                {
                    b.Property<Guid>("StudentScreeningId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdmittedSeverPneumonia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnyOfTheFollowingSymptoms")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttendHealthFacility14Days")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CloseContactInfectedPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CloseContactProbableInfectedPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("GeneralSenseWellbeing")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HighRiskTravel14Days")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("QRCodeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ScreeningTimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SufferFromChronicDisease")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WearingAMask")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentScreeningId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentScreening");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentScreeningTemp", b =>
                {
                    b.Property<Guid>("StudentScreeningTempId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdmittedSeverPneumonia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnyOfTheFollowingSymptoms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttendHealthFacility14Days")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CloseContactInfectedPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CloseContactProbableInfectedPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("GeneralSenseWellbeing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HighRiskTravel14Days")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("QRCodeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RowNumber")
                        .HasColumnType("int");

                    b.Property<string>("RowType")
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateTime?>("ScreeningTimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SufferFromChronicDisease")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Temp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WearingAMask")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentScreeningTempId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentScreeningTemps");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentTemp", b =>
                {
                    b.Property<Guid>("StudentTempId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("Extra1ModuleCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Extra1SubjString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Extra2ModuleCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Extra2SubjString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Extra3ModuleCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Extra3SubjString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("FridayModuleCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FridaySubjString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("MondayModuleCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MondaySubjString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QRCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RowNumber")
                        .HasColumnType("int");

                    b.Property<string>("RowType")
                        .HasColumnType("nvarchar(1)");

                    b.Property<Guid?>("StudentClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("StudentGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("StudentNr")
                        .HasColumnType("int");

                    b.Property<Guid?>("ThursdayModuleCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ThursdaySubjString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TuesdayModuleCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TuesdaySubjString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("WednesdayModuleCodeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WednesdaySubjString")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentTempId");

                    b.HasIndex("Extra1ModuleCodeId");

                    b.HasIndex("Extra2ModuleCodeId");

                    b.HasIndex("Extra3ModuleCodeId");

                    b.HasIndex("FridayModuleCodeId");

                    b.HasIndex("GenderId");

                    b.HasIndex("MondayModuleCodeId");

                    b.HasIndex("StudentClassId");

                    b.HasIndex("StudentGroupId");

                    b.HasIndex("ThursdayModuleCodeId");

                    b.HasIndex("TuesdayModuleCodeId");

                    b.HasIndex("WednesdayModuleCodeId");

                    b.ToTable("StudentTemps");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.Audit", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("IdentityUser");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.GradeModuleRoster", b =>
                {
                    b.HasOne("WebApp_ExcelFileProcessor.Models.ModuleCode", "ModuleCode")
                        .WithMany()
                        .HasForeignKey("ModuleCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModuleCode");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.Student", b =>
                {
                    b.HasOne("WebApp_ExcelFileProcessor.Models.Gender", "Gender")
                        .WithMany("Students")
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApp_ExcelFileProcessor.Models.StudentClass", "StudentClass")
                        .WithMany("Students")
                        .HasForeignKey("StudentClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApp_ExcelFileProcessor.Models.StudentGroup", "StudentGroup")
                        .WithMany("Students")
                        .HasForeignKey("StudentGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gender");

                    b.Navigation("StudentClass");

                    b.Navigation("StudentGroup");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentScreening", b =>
                {
                    b.HasOne("WebApp_ExcelFileProcessor.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentScreeningTemp", b =>
                {
                    b.HasOne("WebApp_ExcelFileProcessor.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentTemp", b =>
                {
                    b.HasOne("WebApp_ExcelFileProcessor.Models.ModuleCode", "Extra1ModuleCode")
                        .WithMany()
                        .HasForeignKey("Extra1ModuleCodeId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.ModuleCode", "Extra2ModuleCode")
                        .WithMany()
                        .HasForeignKey("Extra2ModuleCodeId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.ModuleCode", "Extra3ModuleCode")
                        .WithMany()
                        .HasForeignKey("Extra3ModuleCodeId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.ModuleCode", "FridayModuleCode")
                        .WithMany()
                        .HasForeignKey("FridayModuleCodeId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.ModuleCode", "MondayModuleCode")
                        .WithMany()
                        .HasForeignKey("MondayModuleCodeId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.StudentClass", "StudentClass")
                        .WithMany()
                        .HasForeignKey("StudentClassId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.StudentGroup", "StudentGroup")
                        .WithMany()
                        .HasForeignKey("StudentGroupId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.ModuleCode", "ThursdayModuleCode")
                        .WithMany()
                        .HasForeignKey("ThursdayModuleCodeId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.ModuleCode", "TuesdayModuleCode")
                        .WithMany()
                        .HasForeignKey("TuesdayModuleCodeId");

                    b.HasOne("WebApp_ExcelFileProcessor.Models.ModuleCode", "WednesdayModuleCode")
                        .WithMany()
                        .HasForeignKey("WednesdayModuleCodeId");

                    b.Navigation("Extra1ModuleCode");

                    b.Navigation("Extra2ModuleCode");

                    b.Navigation("Extra3ModuleCode");

                    b.Navigation("FridayModuleCode");

                    b.Navigation("Gender");

                    b.Navigation("MondayModuleCode");

                    b.Navigation("StudentClass");

                    b.Navigation("StudentGroup");

                    b.Navigation("ThursdayModuleCode");

                    b.Navigation("TuesdayModuleCode");

                    b.Navigation("WednesdayModuleCode");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.Gender", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentClass", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("WebApp_ExcelFileProcessor.Models.StudentGroup", b =>
                {
                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
