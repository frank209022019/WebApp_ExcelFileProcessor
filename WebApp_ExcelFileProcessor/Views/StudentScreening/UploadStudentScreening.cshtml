
@{
    ViewData["Title"] = "Upload Student Screening";
}

<div class="form-row custom-row-responsiveness">
    <div class="col-12 custom-col-responsiveness mb-2">
        <h1 class="custom-dark-blue">Upload Student Screening</h1>
        <hr class="custom-blue-hr" />
    </div>
    <div class="col-12 custom-col-responsiveness dropzone-div">
        @using (Html.BeginForm("UploadStudentScreening", "StudentScreeningController", FormMethod.Post, new
        {
            @class = "dropzone dropzone-form round-corners",
            id = "dropzone-form",
        }))
        {
            <div class="fallback">
                <input name="file" type="file" multiple />
            </div>
            <div class="dz-message" data-dz-message><span><i class="fas fa-cloud-upload-alt fa-5x icon-light-grey"></i></span></div>
        }
    </div>
</div>

<!-- Submit Button -->
<div class="form-row mt-1 custom-row-responsiveness">
    <div class="col-xl-2 offset-xl-8  col-md-12 mt-2">
        <button class="btn btn-outline-danger full-width" id="btnClearQueue" data-toggle="tooltip" data-placement="bottom" title="Clears all files from the Dropzone.">Remove Files</button>
    </div>
    <div class="col-xl-2 col-md-12 mt-2">
        <button class="btn btn-outline-primary custom-primary-button full-width" id="btnProcessQueue" data-toggle="tooltip" data-placement="bottom" title="Uploads all files from the Dropzone.">Upload Files</button>
    </div>
</div>

<script>
    $(document).ready(function () {
        checkFileCount();
    });

    // DropZone Configuration
    var totalFiles = 0;
     var dz =   Dropzone.options.dropzoneForm = {
        autoProcessQueue: false,
        addRemoveLinks: true,
        paramName: "file",
        maxFilesize: 20,
        maxFiles: 1,
        acceptedFiles: ".xlsx, .xls, .xlsm, .xlsb",
        dictMaxFilesExceeded: "You have reached the max file limit! Please remove any extra files!",
        dictFileTooBig: "This file is too big! Max size is 20Mb!",
            init: function () {
                $("#overlay").fadeIn(300);　

            var dropzone = this;
            this.on("addedfile", function (file) {
                totalFiles++;
                checkFileCount();
                this.emit("thumbnail", file, "/icons/dropzone-icon.jpg");
            });
            this.on("removedfile", function (file) {
                totalFiles--;
                checkFileCount();
            });
            $("#btnClearQueue").click(function () {
                dropzone.removeAllFiles(true);
            });
                $("#btnProcessQueue").click(function () {
                    loadingSpinner_Show();
                // check if queue has invalid files
                var totalRejectedFiles = dropzone.getRejectedFiles();
                if (totalRejectedFiles.length > 0) {
                    sweetAlertWarning();
                }
                else {

                    var totalAcceptedFiles = dropzone.getAcceptedFiles();
                    var formData = new FormData();
                    for (var i = 0; i < totalAcceptedFiles.length; i++) {
                        formData.append("files", totalAcceptedFiles[i])
                    }
                    $.ajax({
                        url: '@Url.Action("UploadStudentScreening", "StudentScreening")',
                        type: 'POST',
                        data: formData,
                        processData: false,
                        contentType: false,
                        success: function (data) {
                            loadingSpinner_Hide();
                            sweetAlertSuccess_StudentScreeningUpload();
                            dropzone.removeAllFiles(true);
                        },
                        error: function (data) {
                            loadingSpinner_Hide();
                            sweetAlertError("Student Screening File Upload", "Your file could not be processed.");
                            dropzone.removeAllFiles(true);
                        }
                    });

                }
            });
        }
    };

    // Remove/Upload Button Functions
    function checkFileCount() {
        if (totalFiles <= 0)
            disableButtons();
        if (totalFiles > 0)
            enableButtons();
    }
    function enableButtons() {
        $("#btnClearQueue").prop("disabled", false);
        $("#btnProcessQueue").prop("disabled", false);
    }
    function disableButtons() {
        $("#btnClearQueue").prop("disabled", true);
        $("#btnProcessQueue").prop("disabled", true);
    }
</script>

