@{
    ViewData["Title"] = "SchoolAbsenteeByDate";
}

<!--Header-->
<div class="form-row custom-row-responsiveness">
    <div class="col-12 custom-col-responsiveness mb-2">
        <h1 class="custom-dark-blue">School Absent Report</h1>
        <hr class="custom-blue-hr" />
    </div>
</div>

<!-- Select options-->
<div class="form-row custom-row-responsiveness">
    <div class="col-xl-2 -col-md-12 custom-col-responsiveness mb-2">
        <div class="form-group">
            <label class="control-label">Grade</label>
            <select class="form-control" id="inputGrade" placeholder="Select a Grade" required>
                <option value="8">8</option>
                <option value="9">9</option>
                <option value="10">10</option>
                <option value="11">11</option>
                <option value="12">12</option>
            </select>
        </div>
    </div>
    <div class="col-xl-2 -col-md-12 custom-col-responsiveness mb-2">
        <div class="form-group">
            <label class="control-label">Class</label>
            <select class="form-control" id="inputClass" placeholder="Select a Class" required>
                <option value="A">A</option>
                <option value="B">B</option>
                <option value="C">C</option>
                <option value="D">D</option>
                <option value="E">E</option>
                <option value="F">F</option>
                <option value="G">G</option>
                <option value="H">H</option>
                <option value="All">All</option>
            </select>
        </div>
    </div>
    <div class="col-xl-2 -col-md-12 custom-col-responsiveness mb-2">
        <div class="form-group">
            <label class="control-label">Group</label>
            <select class="form-control" id="inputGroup" placeholder="Select a Group" required>
                <option value="G1">G1</option>
                <option value="G2">G2</option>
                <option value="All">All</option>
            </select>
        </div>
    </div>
    <div class="col-xl-3 -col-md-12 custom-col-responsiveness mb-2">
        <div class="form-group">
            <label class="control-label">Start Date</label>
            <input id="inputStartDate" class="form-control" type="date" asp-format="{0:dd/MM/yyyy}" onkeydown="return false" />
        </div>
    </div>
    <div class="col-xl-3 -col-md-12 custom-col-responsiveness mb-2">
        <div class="form-group">
            <label class="control-label">End Date</label>
            <input id="inputEndDate" class="form-control" type="date" asp-format="{0:dd/MM/yyyy}" onkeydown="return false" />
        </div>
    </div>
</div>

<!-- Buttons-->
<div class="form-row custom-row-responsiveness mt-3">
    <div class="col-xl-2 offset-xl-8 -col-md-12 custom-col-responsiveness mb-2">
        <input type="button" id="btnClearFields" class="btn btn-outline-danger full-width" value="Reset" />
    </div>
    <div class="col-xl-2 -col-md-12 custom-col-responsiveness mb-2">
        <input type="button" id="btnGenerateReport" class="btn btn-outline-primary full-width" value="Generate Report" />
    </div>
</div>

<script>
    $(document).ready(function () {
        getMinMaxDateForDatePickers();

        $("#btnClearFields").click(function () {
            $('#inputGrade').prop('selectedIndex', 0);
            $('#inputClass').prop('selectedIndex', 0);
            $('#inputGroup').prop('selectedIndex', 0);
            $("#inputStartDate").val('');
            $("#inputEndDate").val('');
        });

        $("#btnGenerateReport").click(function () {
            if (startDateHasValue() && endDateHasValue()) {
                //  ajax to get list
                loadingSpinner_Show();
                var gradeValue = $('#inputGrade').find(":selected").text();
                var classValue = $('#inputClass').find(":selected").text();
                var groupValue = $('#inputGroup').find(":selected").text();
                var startDateValue = $('#inputStartDate').val()
                var endDateValue = $('#inputEndDate').val();

                $.ajax({
                        url: '@Url.Action("GenerateSchoolAbsenteeList", "Report")',
                        type: 'GET',
                    data: {
                        gradeString: gradeValue.toString(),
                        classString: classValue.toString(),
                        groupValue: groupValue.toString(),
                        startDateString: startDateValue.toString(),
                        endDateString: endDateValue.toString()
                    },
                    success: function (data) {
                        loadingSpinner_Hide();

                        if (data == null)
                            sweetAlertWarning("School Absent Report", "No records were found matching your parameters.");
                        else
                            window.location.href = '/Report/ExportAbsenteeReport?fileGuid=' + data.toString();
                        },
                        error: function (data) {
                            loadingSpinner_Hide();
                            sweetAlertError("School Absent Report", "Your request could not be processed.");
                        }
                    });
            }
            else {
                sweetAlertError("School Absent Report", "Ensure all fields have a valid input.");
            }
        });     
    });

   

  function getMinMaxDateForDatePickers() {
      //loadingSpinner_Show();

      var gradeValue = $('#inputGrade').find(":selected").text();
      var classValue = $('#inputClass').find(":selected").text();
      var groupValue = $('#inputGroup').find(":selected").text();

        $.ajax({
            url: '@Url.Action("GetMinMaxDateRange", "Report")',            
            type: 'GET',          
            success: function (data) {
                setMinMaxDateForDatePickers(data);
                //loadingSpinner_Hide();
           },
            error: function (data) {
                //loadingSpinner_Hide();
                sweetAlertError("Student Absent Report", "Your request could not be processed.");
            }
        });
    }

    function setMinMaxDateForDatePickers(data) {
        var minDateArr = data.minDateTime.substring(0, 10).split('-');
        var maxDateArr = data.maxDateTime.substring(0, 10).split('-');

        var setMinDate = new Date(minDateArr[0], minDateArr[1] - 1, minDateArr[2]);
        var setMaxDate = new Date(maxDateArr[0], maxDateArr[1] - 1, maxDateArr[2]);

        $("#inputStartDate").attr({
            "min": formatDate(setMinDate),
            "max": formatDate(setMaxDate),
            "value": formatDate(setMinDate),
        });

        $("#inputEndDate").attr({
            "min": formatDate(setMinDate),
            "max": formatDate(setMaxDate),
            "value": formatDate(setMaxDate),
        });
    }

    function formatDate(date) {
        var d = new Date(date),
            month = '' + (d.getMonth() + 1),
            day = '' + d.getDate(),
            year = d.getFullYear();

        if (month.length < 2)
            month = '0' + month;
        if (day.length < 2)
            day = '0' + day;

        return [year, month, day].join('-');
    }

    function startDateHasValue() {
        var datetimeval = $("#inputStartDate").val();
        if (datetimeval == '' || datetimeval == null)
            return false;
        else
            return true;
    }

    function endDateHasValue() {
        var datetimeval = $("#inputEndDate").val();
        if (datetimeval == '' || datetimeval == null)
            return false;
        else
            return true;
    }
</script>